name: CI

permissions:
  contents: read

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: ./.github/actions/setup-php
      - name: Copy .env
        run: cp .env.example .env
      - name: Generate app key
        run: php artisan key:generate
      - name: Create SQLite database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Ensure public/storage exists
        run: mkdir -p public/storage
      - name: Run migrations
        run: php artisan migrate
      - name: Create cache table
        run: php artisan cache:table && php artisan migrate
      - name: Run custom application status check
        run: php artisan app:check-status

  phpstan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: ./.github/actions/setup-php
      - name: Run PHPStan
        run: vendor/bin/phpstan analyse

  php-cs-fixer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: ./.github/actions/setup-php
      - name: Run PHP CS Fixer
        run: vendor/bin/php-cs-fixer fix --dry-run --diff

  security-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: ./.github/actions/setup-php
      - name: Run security check
        run: vendor/bin/security-checker security:check

  performance-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: ./.github/actions/setup-php
      - name: Run performance tests
        run: php artisan performance:test

  code-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup PHP (with xdebug)
        uses: ./.github/actions/setup-php
        with:
          coverage: xdebug
      - name: Run tests with coverage
        run: php artisan test --coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  cypress-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
      - name: Run Cypress tests
        run: npm run cypress:run

  browserstack-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
      - name: Run BrowserStack tests
        run: npm run browserstack:run

  accessibility-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
      - name: Run accessibility tests
        run: npm run axe:run

  prettier:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
      - name: Run ESLint
        run: npm run lint
      - name: Run Prettier
        run: npm run prettier:check
