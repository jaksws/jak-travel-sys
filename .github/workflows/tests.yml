name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: [8.2, 8.3, 8.4]

    name: PHP ${{ matrix.php }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction

      - name: Apply version-specific compatibility fixes
        run: |
          if [[ "${{ matrix.php }}" == "8.3" || "${{ matrix.php }}" == "8.4" ]]; then
            php -f app/Compatibility/apply-fixes.php
          fi

      - name: Copy environment file
        run: cp .env.example .env

      - name: Generate app key
        run: php artisan key:generate

      - name: Ensure SQLite database file creation
        run: |
          if [ ! -f "database/database.sqlite" ]; then
            touch database/database.sqlite
          fi

      - name: Check and Create Migrations Table
        run: |
          # التحقق من وجود جدول migrations
          if ! php artisan migrate:status; then
            echo "جدول الترحيلات غير موجود، إنشاءه الآن..."
            php artisan migrate:install
          fi

      - name: Run Migrations
        run: php artisan migrate --force

      - name: Backup Database
        run: php artisan app:database-backup

      - name: Check Application Status
        run: php artisan app:check-status

      - name: Seed Database
        run: php artisan db:seed

      - name: Execute tests
        run: php artisan test

      # إضافة خطوة لإرسال إشعار في حالة الفشل
      - name: Send failure notification
        if: failure()
        run: echo "العملية فشلت في مرحلة معينة"